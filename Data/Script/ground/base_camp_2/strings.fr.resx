<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Appraisal_Bag_Empty" xml:space="preserve">
    <value>Hein ?[pause=0] Tu n'as pas d'objets sur toi.</value>
    <comment></comment>  </data>
  <data name="Appraisal_Choose" xml:space="preserve">
    <value>Choisis un coffre que tu veux que j'ouvre. (Vous pouvez utiliser {0} pour choisir plusieurs objets).</value>
    <comment></comment>  </data>
  <data name="Appraisal_Choose_Multi" xml:space="preserve">
    <value>Je peux ouvrir tout ça pour {0}.</value>
    <comment></comment>  </data>
  <data name="Appraisal_Choose_One" xml:space="preserve">
    <value>Je peux ouvrir ton {1} pour {0}.</value>
    <comment></comment>  </data>
  <data name="Appraisal_End" xml:space="preserve">
    <value>C'est fait ![pause=0] Regardez les produits.</value>
    <comment></comment>  </data>
  <data name="Appraisal_Goodbye" xml:space="preserve">
    <value>Reviens avec plus de coffres la prochaine fois!</value>
    <comment></comment>  </data>
  <data name="Appraisal_Info_001" xml:space="preserve">
    <value>Ces coffres que tu trouves dans les donjons... Tu ne t'es jamais demandé ce qu'il y avait à l'intérieur ?</value>
    <comment></comment>  </data>
  <data name="Appraisal_Info_002" xml:space="preserve">
    <value>Ils sont fermés à clé.[pause=0] Il n'y a aucune clé au monde qui puisse les ouvrir.</value>
    <comment></comment>  </data>
  <data name="Appraisal_Info_003" xml:space="preserve">
    <value>Mais je n'ai pas besoin de clé ![pause=0] Je vais les détruire et te donner tout ce qu'il y a à l'intérieur!</value>
    <comment></comment>  </data>
  <data name="Appraisal_Info_004" xml:space="preserve">
    <value>Donne moi {0} pour chacune et ce sera bon.</value>
    <comment></comment>  </data>
  <data name="Appraisal_Intro" xml:space="preserve">
    <value>Vous avez des coffres que vous voulez que je détruise ? Seulement {0} pièce !</value>
    <comment></comment>  </data>
  <data name="Appraisal_No_Money" xml:space="preserve">
    <value>Wow, wow![pause=0] Tu n'as pas assez de \uE024 pour ça!</value>
    <comment></comment>  </data>
  <data name="Appraisal_Option_Open" xml:space="preserve">
    <value>Ouvrir les Coffres.</value>
    <comment></comment>  </data>
  <data name="Appraisal_Return" xml:space="preserve">
    <value>Tu as besoin d'autre chose?</value>
    <comment></comment>  </data>
  <data name="Appraisal_Start" xml:space="preserve">
    <value>Attends une seconde.[pause=0] Ce sera rapide.</value>
    <comment></comment>  </data>
  <data name="Broke_Line_001" xml:space="preserve">
    <value>Pourquoi,[pause=20] pourquoi n'ai-je pas visité le stockage avant de sortir ?[br]Je me suis évanoui là-bas avec un inventaire complet...</value>
    <comment></comment>  </data>
  <data name="Broke_Line_002" xml:space="preserve">
    <value>Mes objets...[pause=30] mon argent...[pause=30] tout est partiiiiiii...</value>
    <comment></comment>  </data>
  <data name="Catch_Line_001" xml:space="preserve">
    <value>Hey Zigzaton,[pause=30] attrape !</value>
    <comment></comment>  </data>
  <data name="Catch_Line_002" xml:space="preserve">
    <value>J'ai réussi![pause=0] C'est à toi,[pause=20] Rattata!</value>
    <comment></comment>  </data>
  <data name="Catch_Line_003" xml:space="preserve">
    <value>Merci![pause=0] T'es bien mieux que le Pokémon sauvage dans Tropical Path.</value>
    <comment></comment>  </data>
  <data name="Catch_Line_005" xml:space="preserve">
    <value>Ouais,[pause=20] personne n'en a besoin![pause=0] On peut jouer ensemble!</value>
    <comment></comment>  </data>
  <data name="Elder_Line_001" xml:space="preserve">
    <value>Noarfang a été propriétaire des labyrinthes d'entraînement  pendant aussi longtemps que je me souvienne.[br]Il est sévère des fois,[pause=20] mais il se soucie des explorateurs.</value>
    <comment></comment>  </data>
  <data name="Father_Line_001" xml:space="preserve">
    <value>J'étais l'un des pionniers lorsque les maîtres de la guilde nous ont demandé d'explorer cette île.[br]Avec ma partenaire Nidoqueen,[pause=0] nous avons tracé des chemins à travers la forêt et installé un camp dans les falaises.[br]Mais c'était il y a longtemps.[pause=0] Nous élevons une famille maintenant.</value>
    <comment></comment>  </data>
  <data name="Food_Line_001" xml:space="preserve">
    <value>Tu pars à l'aventure ?[pause=0] N'oublies pas de prendre de la nourriture avec toi !</value>
    <comment></comment>  </data>
  <data name="Food_Line_002" xml:space="preserve">
    <value>Tu auras faim en explorant les donjons mystères.[br]Si ton estomac se vide, tu commenceras à subir des dégâts.</value>
    <comment></comment>  </data>
  <data name="Hesitant_Line_001" xml:space="preserve">
    <value>La vie d'explorateur a l'air difficile.[pause=0] Je suis pas sur de pouvoir la supporter...</value>
    <comment></comment>  </data>
  <data name="History_Line_001" xml:space="preserve">
    <value>Un jour,[pause=20] des lettres ont été écrites depuis ce bureau de poste et dispersées dans le monde entier.[br]Personne ne sait exactement qui les a écrites,[pause=0] mais elles portaient toutes l'emblème de l'équipe de l'explorateur légendaire.[br]Elles promettaient un titre de prestige ultime,[pause=0] et marquaient le point culminant des montagnes de cette île.</value>
    <comment></comment>  </data>
  <data name="Interactive_Phase_002_Line_001" xml:space="preserve">
    <value>{1} vous a recruté de {0}, pas vrai?</value>
    <comment></comment>  </data>
  <data name="Interactive_Phase_003_Line_001" xml:space="preserve">
    <value>Ah.[pause=30] tu dois venir de {0}.</value>
    <comment></comment>  </data>
  <data name="Interactive_Phase_004_Line_001" xml:space="preserve">
    <value>Est-ce que c'est vrai que tu viens de {0}?</value>
    <comment></comment>  </data>
  <data name="Interactive_Phase_005_Line_001" xml:space="preserve">
    <value>T'es de {0}?[pause=0] Jamais entendu parler.</value>
    <comment></comment>  </data>
  <data name="Item_Give_Storage" xml:space="preserve">
    <value>Le {0} a été envoyé au stockage.</value>
    <comment></comment>  </data>
  <data name="Juice_Intro" xml:space="preserve">
    <value>Bienvenue, ici c'est le stand de jus de fruit de Caratroc</value>
    <comment></comment>  </data>
  <data name="Music_End" xml:space="preserve">
    <value>Repasse par là \u266A</value>
    <comment></comment>  </data>
</root>